{"name":"UUID Service","tagline":"A simple service for managing UUIDs","body":"# UUID Service [![Build Status](https://img.shields.io/travis/conortm/uuid-service.svg)](https://travis-ci.org/conortm/uuid-service) [![Coverage Status](https://img.shields.io/coveralls/conortm/uuid-service.svg)](https://coveralls.io/r/conortm/uuid-service?branch=master)\r\n\r\nA simple service for `PUT`ting & `GET`ting UUIDs, provided a key.\r\n\r\nThis is a [Go](http://golang.org/) web service, backed by [MongoDB](https://www.mongodb.org/),\r\nrunning on [Docker](https://www.docker.com/), with [Vagrant](https://www.vagrantup.com/)\r\nfor local development.\r\n\r\n## How to use this image\r\n\r\nStart a [uuid-service](https://hub.docker.com/r/conortm/uuid-service/) instance\r\nand link it to a [MongoDB](https://hub.docker.com/_/mongo/) instance:\r\n\r\n```bash\r\ndocker run --name some-uuid-service --link some-mongo:mongo -d conortm/uuid-service\r\n```\r\n\r\n## How to use this service\r\n\r\nOnce you have the service running at `http://my-uuid-service.com`, do the following:\r\n\r\nTo create a new `UUID`, run:\r\n\r\n```bash\r\ncurl -v -X PUT http://my-uuid-service.com/uuid/my-key\r\n```\r\n\r\n**Note:** A response status of `201 Created` indicates a successfully created UUID.\r\nA status of `200 OK` indicates that the UUID already exists for the provided key.\r\n\r\nTo get an existing `UUID`, run:\r\n\r\n```bash\r\ncurl -v http://my-uuid-service.com/uuid/my-key\r\n```\r\n\r\n## Vagrant\r\n\r\nGet a local instance up and running with:\r\n\r\n```bash\r\nvagrant up\r\n```\r\n\r\n**Note:** Substitute `my-uuid-service.com` above with `localhost:3000`.\r\n\r\n## License\r\n\r\n[MIT](https://github.com/conortm/uuid-service/blob/master/LICENSE) Â© [Conor McNamara](http://conortm.io)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}